// <auto-generated />
using System;
using FoodUserNotifier.DataAccess.Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FoodUserNotifier.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240608152016_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FoodUserNotifier.BusinessLogic.Contracts.RecepientDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("RecepientDTOId")
                        .HasColumnType("uuid");

                    b.Property<string>("RoleEnum")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telegram")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id")
                        .HasName("recepientid");

                    b.HasIndex("RecepientDTOId");

                    b.ToTable("recepient");
                });

            modelBuilder.Entity("FoodUserNotifier.BusinessLogic.Contracts.RecepientDTO", b =>
                {
                    b.HasOne("FoodUserNotifier.BusinessLogic.Contracts.RecepientDTO", null)
                        .WithMany()
                        .HasForeignKey("RecepientDTOId");
                });
#pragma warning restore 612, 618
        }
    }
}
